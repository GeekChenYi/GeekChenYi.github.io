(window.webpackJsonp=window.webpackJsonp||[]).push([[214],{634:function(s,t,a){"use strict";a.r(t);var e=a(15),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"配置-gitignore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-gitignore"}},[s._v("#")]),s._v(" 配置.gitignore")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("node_modules\n.DS_Store\ndist\n.npmrc\n.cache\n\n.local\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# local env files")]),s._v("\n.env.local\n.env.*.local\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Log files")]),s._v("\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\npnpm-debug.log*\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Editor directories and files")]),s._v("\n.idea\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# .vscode 注释.vscode，这是因为VSCode用户可以配置项目级别的VSCode配置")]),s._v("\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw?\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("h2",{attrs:{id:"集成-editorconfig-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集成-editorconfig-配置"}},[s._v("#")]),s._v(" 集成 EditorConfig 配置")]),s._v(" "),a("p",[s._v("EditorConfig 有助于为不同 IDE 编辑器上处理同一项目的多个开发人员维护一致的编码风格。")]),s._v(" "),a("p",[s._v("在项目根目录下增加 "),a("code",[s._v(".editorconfig")]),s._v(" 文件：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Editor configuration, see http://editorconfig.org")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表示是最顶层的 EditorConfig 配置文件")]),s._v("\nroot "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表示所有文件适用")]),s._v("\ncharset "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" utf-8 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置文件字符集为 utf-8")]),s._v("\nindent_style "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" space "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 缩进风格（tab | space）")]),s._v("\nindent_size "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 缩进大小")]),s._v("\nend_of_line "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" lf "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 控制换行类型(lf | cr | crlf)")]),s._v("\ntrim_trailing_whitespace "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 去除行首的任意空白字符")]),s._v("\ninsert_final_newline "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 始终在文件末尾插入一个新行")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("*.md"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表示仅 md 文件适用以下规则")]),s._v("\nmax_line_length "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" off\ntrim_trailing_whitespace "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("注意：")]),s._v(" "),a("ul",[a("li",[s._v("VSCode 使用 EditorConfig 需要去插件市场下载插件 "),a("strong",[s._v("EditorConfig for VS Code")]),s._v(" 。")]),s._v(" "),a("li",[s._v("JetBrains 系列（WebStorm、IntelliJ IDEA 等）则不用额外安装插件，可直接使用 EditorConfig 配置。")])]),s._v(" "),a("h2",{attrs:{id:"集成-prettier-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集成-prettier-配置"}},[s._v("#")]),s._v(" 集成 Prettier 配置")]),s._v(" "),a("p",[s._v("Prettier 是一款强大的代码格式化工具，支持 JavaScript、TypeScript、CSS、SCSS、Less、JSX、Angular、Vue、GraphQL、JSON、Markdown 等语言，基本上前端能用到的文件格式它都可以搞定，是当下最流行的代码格式化工具。")]),s._v(" "),a("ol",[a("li",[s._v("安装Prettier")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i prettier -D\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[s._v("创建Prettier配置文件，在本项目根目录下创建 "),a("code",[s._v(".prettierrc")]),s._v(" 文件。")])]),s._v(" "),a("li",[a("p",[s._v("配置 "),a("code",[s._v(".prettierrc")]),s._v(" ,更多配置查看官方文档")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"printWidth"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"tabWidth"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"useTabs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"semi"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"vueIndentScriptAndStyle"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"singleQuote"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"quoteProps"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"as-needed"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"bracketSpacing"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"trailingComma"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"none"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"jsxBracketSameLine"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"jsxSingleQuote"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"arrowParens"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"insertPragma"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"requirePragma"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"proseWrap"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"never"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"htmlWhitespaceSensitivity"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"strict"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"endOfLine"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"rangeStart"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("Prettier 安装且配置好之后，就能使用命令来格式化代码 "),a("code",[s._v("npx prettier --write .")]),s._v(" .表示所有文件")])])]),s._v(" "),a("p",[s._v("注意：")]),s._v(" "),a("ul",[a("li",[s._v("VSCode 编辑器使用 Prettier 配置需要下载插件 "),a("strong",[s._v("Prettier - Code formatter")]),s._v(" 。")]),s._v(" "),a("li",[s._v("JetBrains 系列编辑器（WebStorm、IntelliJ IDEA 等）则不用额外安装插件，可直接使用 Prettier 配置。")])]),s._v(" "),a("p",[s._v("Prettier 配置好以后，在使用 VSCode 或 WebStorm 等编辑器的格式化功能时，编辑器就会按照 Prettier 配置文件的规则来进行格式化，避免了因为大家编辑器配置不一样而导致格式化后的代码风格不统一的问题。")]),s._v(" "),a("h2",{attrs:{id:"集成-eslint-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集成-eslint-配置"}},[s._v("#")]),s._v(" 集成 ESLint 配置")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/eslint/eslint",target:"_blank",rel:"noopener noreferrer"}},[s._v("ESLint"),a("OutboundLink")],1),s._v(" 是一款用于查找并报告代码中问题的工具，并且支持部分问题自动修复。其核心是通过对代码解析得到的 AST（Abstract Syntax Tree 抽象语法树）进行模式匹配，来分析代码达到检查代码质量和风格问题的能力。")]),s._v(" "),a("p",[s._v("正如前面我们提到的因团队成员之间编程能力和编码习惯不同所造成的代码质量问题，我们使用 ESLint 来解决，一边写代码一边查找问题，如果发现错误，就给出规则提示，并且自动修复，长期下去，可以促使团队成员往同一种编码风格靠拢。")]),s._v(" "),a("ol",[a("li",[s._v("本地安装ESLint")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i eslint -D\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("配置 ESLint ，ESLint 安装成功后，执行 "),a("code",[s._v("npx eslint --init")]),s._v("，然后按照终端操作提示完成一系列设置来创建配置文件。")]),s._v(" "),a("li",[s._v("ESLint 配置文件 .eslintrc.js，在上一步操作完成后，会在项目根目录下自动生成 .eslintrc.js 配置，此后根据项目的实际需求还需要添加一些额外的规则，也在此文件中追加。")])]),s._v(" "),a("p",[s._v("注意点：")]),s._v(" "),a("ul",[a("li",[s._v("VSCode 使用 ESLint 配置文件需要去插件市场下载插件 "),a("strong",[s._v("ESLint")]),s._v(" 。")]),s._v(" "),a("li",[s._v("JetBrains 系列（WebStorm、IntelliJ IDEA 等）则不用额外安装插件。")])]),s._v(" "),a("p",[s._v("配置好以后，我们在 VSCode 或 WebStorm 等编辑器中开启 ESLin，写代码时，ESLint 就会按照我们配置的规则来进行实时代码检查，发现问题会给出对应错误提示和修复方案。")]),s._v(" "),a("p",[s._v("虽然，现在编辑器已经给出错误提示和修复方案，但需要我们一个一个去点击修复，还是挺麻烦的。很简单，我们只需设置编辑器保存文件时自动执行 "),a("code",[s._v("eslint --fix")]),s._v(" 命令进行代码风格修复。")]),s._v(" "),a("ul",[a("li",[s._v("在项目根目录下新建.vscode文件夹，在此文件夹下新建setting.json文件")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"editor.codeActionsOnSave"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"source.fixAll.eslint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"解决-prettier-和-eslint-的冲突"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决-prettier-和-eslint-的冲突"}},[s._v("#")]),s._v(" 解决 Prettier 和 ESLint 的冲突")]),s._v(" "),a("p",[s._v("通常大家会在项目中根据实际情况添加一些额外的 ESLint 和 Prettier 配置规则，难免会存在规则冲突情况。")]),s._v(" "),a("p",[s._v("本项目中的 ESLint 配置中使用了 Airbnb JavaScript 风格指南校验，其规则之一是"),a("em",[s._v("代码结束后面要加分号")]),s._v("，而我们在 Prettier 配置文件中加了"),a("em",[s._v("代码结束后面不加分号")]),s._v("的配置项，这样就有冲突了，会出现用 Prettier 格式化后的代码，ESLint 检测到格式有问题的，从而抛出错误提示。")]),s._v(" "),a("p",[s._v("解决两者冲突问题，需要用到 "),a("strong",[s._v("eslint-plugin-prettier")]),s._v(" 和 "),a("strong",[s._v("eslint-config-prettier")]),s._v("。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("eslint-plugin-prettier")]),s._v(" 将 Prettier 的规则设置到 ESLint 的规则中。")]),s._v(" "),a("li",[a("code",[s._v("eslint-config-prettier")]),s._v(" 关闭 ESLint 中与 Prettier 中会发生冲突的规则。")])]),s._v(" "),a("p",[s._v("最后形成优先级："),a("code",[s._v("Prettier 配置规则")]),s._v(" > "),a("code",[s._v("ESLint 配置规则")]),s._v("。")]),s._v(" "),a("ul",[a("li",[s._v("安装插件")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i eslint-plugin-prettier eslint-config-prettier -D \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("在.eslintrc.js中添加Prettier插件")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("module.exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n  extends: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'plugin:vue/essential'")]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'airbnb-base'")]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'plugin:prettier/recommended'")]),s._v(" // 添加 prettier 插件\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("这样，我们在执行 "),a("code",[s._v("eslint --fix")]),s._v(" 命令时，ESLint 就会按照 Prettier 的配置规则来格式化代码，轻松解决二者冲突问题。")]),s._v(" "),a("h3",{attrs:{id:"集成-husky-和-lint-staged"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集成-husky-和-lint-staged"}},[s._v("#")]),s._v(" 集成 husky 和 lint-staged")]),s._v(" "),a("p",[s._v("我们在项目中已集成 ESLint 和 Prettier，在编码时，这些工具可以对我们写的代码进行实时校验，在一定程度上能有效规范我们写的代码，但团队可能会有些人觉得这些条条框框的限制很麻烦，选择视“提示”而不见，依旧按自己的一套风格来写代码，或者干脆禁用掉这些工具，开发完成就直接把代码提交到了仓库，日积月累，ESLint 也就形同虚设。")]),s._v(" "),a("p",[s._v("所以，我们还需要做一些限制，让没通过 ESLint 检测和修复的代码禁止提交，从而保证仓库代码都是符合规范的。")]),s._v(" "),a("p",[s._v("为了解决这个问题，我们需要用到 Git Hook，在本地执行 git commit 的时候，就对所提交的代码进行 ESLint 检测和修复（即执行 eslint --fix），如果这些代码没通过 ESLint 规则校验，则禁止提交。")]),s._v(" "),a("blockquote",[a("p",[s._v("实现这一功能，我们借助 "),a("a",{attrs:{href:"https://github.com/typicode/husky",target:"_blank",rel:"noopener noreferrer"}},[s._v("husky"),a("OutboundLink")],1),s._v(" + "),a("a",{attrs:{href:"https://github.com/okonet/lint-staged",target:"_blank",rel:"noopener noreferrer"}},[s._v("lint-staged"),a("OutboundLink")],1),s._v(" 。")])]),s._v(" "),a("h3",{attrs:{id:"配置-husky"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-husky"}},[s._v("#")]),s._v(" 配置 husky")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("自动配置（推荐）")]),s._v(" "),a("p",[s._v("使用 husky-init 命令快速在项目初始化一个 husky 配置。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("npx husky-init "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" // VS Code的终端中执行此命令会失败，切换到CMD中执行\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这行命令做了四件事：")]),s._v(" "),a("ol",[a("li",[s._v("安装 husky 到开发依赖")]),s._v(" "),a("li",[s._v("在项目根目录下创建 "),a("code",[s._v(".husky")]),s._v(" 目录")]),s._v(" "),a("li",[s._v("在 "),a("code",[s._v(".husky")]),s._v(" 目录创建 "),a("code",[s._v("pre-commit")]),s._v(" hook，并初始化 "),a("code",[s._v("pre-commit")]),s._v(" 命令为 "),a("code",[s._v("npm test")])]),s._v(" "),a("li",[s._v("修改 "),a("code",[s._v("package.json")]),s._v(" 的 "),a("code",[s._v("scripts")]),s._v("，增加 "),a("code",[s._v('"prepare": "husky install"')])])])]),s._v(" "),a("li",[a("p",[s._v("手动配置（不推荐，具体看官方文档）")])])]),s._v(" "),a("p",[s._v("到这里，husky 配置完毕，现在我们来使用它：")]),s._v(" "),a("p",[s._v("husky 包含很多 "),a("code",[s._v("hook")]),s._v("（钩子），常用有："),a("code",[s._v("pre-commit")]),s._v("、"),a("code",[s._v("commit-msg")]),s._v("、"),a("code",[s._v("pre-push")]),s._v("。这里，我们使用 "),a("code",[s._v("pre-commit")]),s._v(" 来触发 ESLint 命令。")]),s._v(" "),a("p",[s._v("修改 "),a("code",[s._v(".husky/pre-commit")]),s._v(" hook 文件的触发命令：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("eslint --fix ./src --ext .vue,.js,.ts\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这个 "),a("code",[s._v("pre-commit")]),s._v(" hook 文件的作用是：当我们执行 "),a("code",[s._v('git commit -m "xxx"')]),s._v(" 时，会先对 "),a("code",[s._v("src")]),s._v(" 目录下所有的 "),a("code",[s._v(".vue")]),s._v("、"),a("code",[s._v(".js")]),s._v("、"),a("code",[s._v(".ts")]),s._v(" 文件执行 "),a("code",[s._v("eslint --fix")]),s._v(" 命令，如果 ESLint 通过，成功 "),a("code",[s._v("commit")]),s._v("，否则终止 "),a("code",[s._v("commit")]),s._v("。")]),s._v(" "),a("p",[s._v("但是又存在一个问题：有时候我们明明只改动了一两个文件，却要对所有的文件执行 "),a("code",[s._v("eslint --fix")]),s._v("。假如这是一个历史项目，我们在中途配置了 ESLint 规则，那么在提交代码时，也会对其他未修改的“历史”文件都进行检查，可能会造成大量文件出现 ESLint 错误，显然不是我们想要的结果。")]),s._v(" "),a("p",[s._v("我们要做到只用 ESLint 修复自己此次写的代码，而不去影响其他的代码。所以我们还需借助一个神奇的工具 lint-staged 。")]),s._v(" "),a("h3",{attrs:{id:"配置-lint-staged"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-lint-staged"}},[s._v("#")]),s._v(" 配置 lint-staged")]),s._v(" "),a("p",[s._v("lint-staged 这个工具一般结合 husky 来使用，它可以让 husky 的 "),a("code",[s._v("hook")]),s._v(" 触发的命令只作用于 "),a("code",[s._v("git add")]),s._v("那些文件（即 git 暂存区的文件），而不会影响到其他文件。")]),s._v(" "),a("ol",[a("li",[s._v("安装lint-staged")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i lint-staged -D\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("在 "),a("code",[s._v("package.json")]),s._v("里增加 lint-staged 配置项")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lint-staged"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"*.{vue,js,ts}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint --fix"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("修改 "),a("code",[s._v(".husky/pre-commit")]),s._v(" hook 的触发命令为："),a("code",[s._v("npx lint-staged")])])]),s._v(" "),a("p",[s._v("至此，husky 和 lint-staged 组合配置完成。")]),s._v(" "),a("h2",{attrs:{id:"提交规范（建议集成）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交规范（建议集成）"}},[s._v("#")]),s._v(" 提交规范（建议集成）")]),s._v(" "),a("p",[s._v("前面我们已经统一代码规范，并且在提交代码时进行强约束来保证仓库代码质量。多人协作的项目中，在提交代码这个环节，也存在一种情况：不能保证每个人对提交信息的准确描述，因此会出现提交信息紊乱、风格不一致的情况。")])])}),[],!1,null,null,null);t.default=n.exports}}]);